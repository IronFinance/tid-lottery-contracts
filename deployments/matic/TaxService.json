{
  "address": "0x71f6DB6817fddFED796eCA516ec17BB295279278",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "burnTitanPoolRatio_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "collect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_titan",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lottery",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_prizeReservePool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prizeReservePool_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reservePoolRatio_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reservePoolRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_burnTitanPoolRatio",
          "type": "uint256"
        }
      ],
      "name": "setDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lottery",
          "type": "address"
        }
      ],
      "name": "setLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prizeReservePool",
          "type": "address"
        }
      ],
      "name": "setPrizeReservePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "titan_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf5b507c9766753c7c089a2a87b8179de3d5c3f2521a8b81391185f3bf877d019",
  "receipt": {
    "to": null,
    "from": "0x5AeBdE597752d689132Dc64D093ff4b09067e9e6",
    "contractAddress": "0x71f6DB6817fddFED796eCA516ec17BB295279278",
    "transactionIndex": 9,
    "gasUsed": "799522",
    "logsBloom": "0x
    "blockHash": "0xdb1db52dc5991aef0195ea456e008428cfe77f185fd4b5a26d5029147f5372e0",
    "transactionHash": "0xf5b507c9766753c7c089a2a87b8179de3d5c3f2521a8b81391185f3bf877d019",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 16586696,
        "transactionHash": "0xf5b507c9766753c7c089a2a87b8179de3d5c3f2521a8b81391185f3bf877d019",
        "address": "0x71f6DB6817fddFED796eCA516ec17BB295279278",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005aebde597752d689132dc64d093ff4b09067e9e6"
        ],
        "data": "0x",
        "logIndex": 30,
        "blockHash": "0xdb1db52dc5991aef0195ea456e008428cfe77f185fd4b5a26d5029147f5372e0"
      },
      {
        "transactionIndex": 9,
        "blockNumber": 16586696,
        "transactionHash": "0xf5b507c9766753c7c089a2a87b8179de3d5c3f2521a8b81391185f3bf877d019",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005aebde597752d689132dc64d093ff4b09067e9e6",
          "0x0000000000000000000000007b5000af8ab69fd59eb0d4f5762bff57c9c04385"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000038cf387000900000000000000000000000000000000000000000000000000004292117c484e10e000000000000000000000000000000000000000000001b2d817b602aaf6404e300000000000000000000000000000000000000000000000003f051df5484510e000000000000000000000000000000000000000000001b2d81b42f631f6494e3",
        "logIndex": 31,
        "blockHash": "0xdb1db52dc5991aef0195ea456e008428cfe77f185fd4b5a26d5029147f5372e0"
      }
    ],
    "blockNumber": 16586696,
    "cumulativeGasUsed": "2704490",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "f5699562eb7d4d6e3a4d234075ee3fed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burnTitanPoolRatio_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_titan\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lottery\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_prizeReservePool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lottery_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeReservePool_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePoolRatio_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reservePoolRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnTitanPoolRatio\",\"type\":\"uint256\"}],\"name\":\"setDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"setLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prizeReservePool\",\"type\":\"address\"}],\"name\":\"setPrizeReservePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"titan_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collect(uint256)\":{\"params\":{\"amount\":\"amount of IRON\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collect(uint256)\":{\"notice\":\"collect iron\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TaxService.sol\":\"TaxService\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/TaxService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/ITaxService.sol\\\";\\nimport \\\"./interfaces/IERC20Burnable.sol\\\";\\n\\ncontract TaxService is Ownable, ITaxService, Initializable {\\n    using SafeERC20 for IERC20Burnable;\\n\\n    address public titan_;\\n    address public lottery_;\\n    address public prizeReservePool_;\\n\\n    uint256 public reservePoolRatio_ = 300000; // 30%\\n    uint256 public burnTitanPoolRatio_ = 700000; // 70%\\n\\n    uint256 private constant PRECISION = 1e6;\\n\\n    function initialize(\\n        address _titan,\\n        address _lottery,\\n        address _prizeReservePool\\n    ) external initializer onlyOwner() {\\n        require(\\n            _titan != address(0) && _lottery != address(0) && _prizeReservePool != address(0),\\n            \\\"Contracts cannot be 0 address\\\"\\n        );\\n        titan_ = _titan;\\n        lottery_ = _lottery;\\n        prizeReservePool_ = _prizeReservePool;\\n    }\\n\\n    //-------------------------------------------------------------------------\\n    // MODIFIERS\\n    //-------------------------------------------------------------------------\\n\\n    /**\\n     * @notice  Restricts to only the lottery contract.\\n     */\\n    modifier onlyLottery() {\\n        require(address(msg.sender) == lottery_, \\\"Caller is not the lottery\\\");\\n        _;\\n    }\\n\\n    //==============================\\n    // STATE MODIFYING FUNCTIONS\\n    //==============================\\n\\n    function setPrizeReservePool(address _prizeReservePool) external onlyOwner {\\n        require(_prizeReservePool != address(0), \\\"Contracts cannot be 0 address\\\");\\n        prizeReservePool_ = _prizeReservePool;\\n    }\\n\\n    function setLottery(address _lottery) external onlyOwner {\\n        lottery_ = _lottery;\\n    }\\n\\n    function setDistribution(uint256 _reservePoolRatio, uint256 _burnTitanPoolRatio) external onlyOwner {\\n        reservePoolRatio_ = _reservePoolRatio;\\n        burnTitanPoolRatio_ = _burnTitanPoolRatio;\\n    }\\n\\n    function collect(uint256 amount) external override onlyLottery {\\n        uint256 _totalRatio = burnTitanPoolRatio_ + reservePoolRatio_;\\n        uint256 _burnTitanAmount = (amount * burnTitanPoolRatio_) / _totalRatio;\\n        uint256 _prizeReserve = amount - _burnTitanAmount;\\n\\n        IERC20Burnable _titan = IERC20Burnable(titan_);\\n        _titan.safeTransferFrom(lottery_, address(this), amount);\\n\\n        if (_prizeReserve > 0) {\\n            _titan.safeTransfer(prizeReservePool_, _prizeReserve);\\n        }\\n\\n        if (_burnTitanAmount > 0) {\\n            _titan.burn(_burnTitanAmount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5d5c81b7626c6e10e6e66127596be730d53a27cb1611887c82e984cf8a2ea65e\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Burnable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Burnable is IERC20 {\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xe4afa7dca62deb70854afc3dc7799ed274aa9aa0cdc6ba556a0ae19e0d38df08\",\"license\":\"MIT\"},\"contracts/interfaces/ITaxService.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface ITaxService {\\r\\n    /**\\r\\n     * collect iron\\r\\n     * @param amount amount of IRON\\r\\n     */\\r\\n    function collect(uint256 amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5d65c3362d7b98450c642be0492dca00a4ce509cb0b62f952492835bc5042bda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052620493e0600455620aae6060055534801561001e57600080fd5b506100283361002d565b61007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c3d8061008c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c0c53b8b1161008c578063f18dba2611610066578063f18dba261461018b578063f298083b1461019e578063f2fde38b146101b1578063f3c0a528146101c457600080fd5b8063c0c53b8b14610152578063ce3f865f14610165578063d2d532221461017857600080fd5b80635717fb21146100d45780635b99a4d6146100f05780635e8a87a81461011b578063621bc66914610124578063715018a6146101395780638da5cb5b14610141575b600080fd5b6100dd60055481565b6040519081526020015b60405180910390f35b600354610103906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6100dd60045481565b610137610132366004610a1e565b6101d7565b005b610137610282565b6000546001600160a01b0316610103565b610137610160366004610a38565b6102b8565b610137610173366004610a9a565b610468565b600154610103906001600160a01b031681565b610137610199366004610ab2565b6105aa565b6101376101ac366004610a1e565b6105df565b6101376101bf366004610a1e565b61062b565b600254610103906001600160a01b031681565b6000546001600160a01b0316331461020a5760405162461bcd60e51b815260040161020190610b22565b60405180910390fd5b6001600160a01b0381166102605760405162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374732063616e6e6f74206265203020616464726573730000006044820152606401610201565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102ac5760405162461bcd60e51b815260040161020190610b22565b6102b660006106c6565b565b600054600160a81b900460ff16806102da5750600054600160a01b900460ff16155b61033d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610201565b600054600160a81b900460ff16158015610367576000805461ffff60a01b191661010160a01b1790555b6000546001600160a01b031633146103915760405162461bcd60e51b815260040161020190610b22565b6001600160a01b038416158015906103b157506001600160a01b03831615155b80156103c557506001600160a01b03821615155b6104115760405162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374732063616e6e6f74206265203020616464726573730000006044820152606401610201565b600180546001600160a01b038087166001600160a01b0319928316179092556002805486841690831617905560038054928516929091169190911790558015610462576000805460ff60a81b191690555b50505050565b6002546001600160a01b031633146104c25760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f7420746865206c6f7474657279000000000000006044820152606401610201565b60006004546005546104d49190610b57565b9050600081600554846104e79190610b8f565b6104f19190610b6f565b905060006104ff8285610bae565b6001546002549192506001600160a01b0390811691610522918391163088610716565b811561054257600354610542906001600160a01b03838116911684610781565b82156105a357604051630852cd8d60e31b8152600481018490526001600160a01b038216906342966c6890602401600060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050505b5050505050565b6000546001600160a01b031633146105d45760405162461bcd60e51b815260040161020190610b22565b600491909155600555565b6000546001600160a01b031633146106095760405162461bcd60e51b815260040161020190610b22565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106555760405162461bcd60e51b815260040161020190610b22565b6001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610201565b6106c3816106c6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526104629085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526107b6565b6040516001600160a01b0383166024820152604481018290526107b190849063a9059cbb60e01b9060640161074a565b505050565b600061080b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108889092919063ffffffff16565b8051909150156107b157808060200190518101906108299190610a7a565b6107b15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610201565b606061089784846000856108a1565b90505b9392505050565b6060824710156109025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610201565b843b6109505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610201565b600080866001600160a01b0316858760405161096c9190610ad3565b60006040518083038185875af1925050503d80600081146109a9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ae565b606091505b50915091506109be8282866109c9565b979650505050505050565b606083156109d857508161089a565b8251156109e85782518084602001fd5b8160405162461bcd60e51b81526004016102019190610aef565b80356001600160a01b0381168114610a1957600080fd5b919050565b600060208284031215610a2f578081fd5b61089a82610a02565b600080600060608486031215610a4c578182fd5b610a5584610a02565b9250610a6360208501610a02565b9150610a7160408501610a02565b90509250925092565b600060208284031215610a8b578081fd5b8151801515811461089a578182fd5b600060208284031215610aab578081fd5b5035919050565b60008060408385031215610ac4578182fd5b50508035926020909101359150565b60008251610ae5818460208701610bc5565b9190910192915050565b6020815260008251806020840152610b0e816040850160208701610bc5565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b6a57610b6a610bf1565b500190565b600082610b8a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ba957610ba9610bf1565b500290565b600082821015610bc057610bc0610bf1565b500390565b60005b83811015610be0578181015183820152602001610bc8565b838111156104625750506000910152565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204df31fe6f5fee09dfa579afc4c848505646bd9b01e93e9a5a90e48be217fb81564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063c0c53b8b1161008c578063f18dba2611610066578063f18dba261461018b578063f298083b1461019e578063f2fde38b146101b1578063f3c0a528146101c457600080fd5b8063c0c53b8b14610152578063ce3f865f14610165578063d2d532221461017857600080fd5b80635717fb21146100d45780635b99a4d6146100f05780635e8a87a81461011b578063621bc66914610124578063715018a6146101395780638da5cb5b14610141575b600080fd5b6100dd60055481565b6040519081526020015b60405180910390f35b600354610103906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b6100dd60045481565b610137610132366004610a1e565b6101d7565b005b610137610282565b6000546001600160a01b0316610103565b610137610160366004610a38565b6102b8565b610137610173366004610a9a565b610468565b600154610103906001600160a01b031681565b610137610199366004610ab2565b6105aa565b6101376101ac366004610a1e565b6105df565b6101376101bf366004610a1e565b61062b565b600254610103906001600160a01b031681565b6000546001600160a01b0316331461020a5760405162461bcd60e51b815260040161020190610b22565b60405180910390fd5b6001600160a01b0381166102605760405162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374732063616e6e6f74206265203020616464726573730000006044820152606401610201565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102ac5760405162461bcd60e51b815260040161020190610b22565b6102b660006106c6565b565b600054600160a81b900460ff16806102da5750600054600160a01b900460ff16155b61033d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610201565b600054600160a81b900460ff16158015610367576000805461ffff60a01b191661010160a01b1790555b6000546001600160a01b031633146103915760405162461bcd60e51b815260040161020190610b22565b6001600160a01b038416158015906103b157506001600160a01b03831615155b80156103c557506001600160a01b03821615155b6104115760405162461bcd60e51b815260206004820152601d60248201527f436f6e7472616374732063616e6e6f74206265203020616464726573730000006044820152606401610201565b600180546001600160a01b038087166001600160a01b0319928316179092556002805486841690831617905560038054928516929091169190911790558015610462576000805460ff60a81b191690555b50505050565b6002546001600160a01b031633146104c25760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f7420746865206c6f7474657279000000000000006044820152606401610201565b60006004546005546104d49190610b57565b9050600081600554846104e79190610b8f565b6104f19190610b6f565b905060006104ff8285610bae565b6001546002549192506001600160a01b0390811691610522918391163088610716565b811561054257600354610542906001600160a01b03838116911684610781565b82156105a357604051630852cd8d60e31b8152600481018490526001600160a01b038216906342966c6890602401600060405180830381600087803b15801561058a57600080fd5b505af115801561059e573d6000803e3d6000fd5b505050505b5050505050565b6000546001600160a01b031633146105d45760405162461bcd60e51b815260040161020190610b22565b600491909155600555565b6000546001600160a01b031633146106095760405162461bcd60e51b815260040161020190610b22565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106555760405162461bcd60e51b815260040161020190610b22565b6001600160a01b0381166106ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610201565b6106c3816106c6565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526104629085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526107b6565b6040516001600160a01b0383166024820152604481018290526107b190849063a9059cbb60e01b9060640161074a565b505050565b600061080b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108889092919063ffffffff16565b8051909150156107b157808060200190518101906108299190610a7a565b6107b15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610201565b606061089784846000856108a1565b90505b9392505050565b6060824710156109025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610201565b843b6109505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610201565b600080866001600160a01b0316858760405161096c9190610ad3565b60006040518083038185875af1925050503d80600081146109a9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ae565b606091505b50915091506109be8282866109c9565b979650505050505050565b606083156109d857508161089a565b8251156109e85782518084602001fd5b8160405162461bcd60e51b81526004016102019190610aef565b80356001600160a01b0381168114610a1957600080fd5b919050565b600060208284031215610a2f578081fd5b61089a82610a02565b600080600060608486031215610a4c578182fd5b610a5584610a02565b9250610a6360208501610a02565b9150610a7160408501610a02565b90509250925092565b600060208284031215610a8b578081fd5b8151801515811461089a578182fd5b600060208284031215610aab578081fd5b5035919050565b60008060408385031215610ac4578182fd5b50508035926020909101359150565b60008251610ae5818460208701610bc5565b9190910192915050565b6020815260008251806020840152610b0e816040850160208701610bc5565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b6a57610b6a610bf1565b500190565b600082610b8a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ba957610ba9610bf1565b500290565b600082821015610bc057610bc0610bf1565b500390565b60005b83811015610be0578181015183820152602001610bc8565b838111156104625750506000910152565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204df31fe6f5fee09dfa579afc4c848505646bd9b01e93e9a5a90e48be217fb81564736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "collect(uint256)": {
        "params": {
          "amount": "amount of IRON"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "collect(uint256)": {
        "notice": "collect iron"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 319,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 271,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 274,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4751,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "titan_",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4753,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "lottery_",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4755,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "prizeReservePool_",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4758,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "reservePoolRatio_",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4761,
        "contract": "contracts/TaxService.sol:TaxService",
        "label": "burnTitanPoolRatio_",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}